{"pages":[{"title":"all-categories","text":"","link":"/all-categories/index.html"},{"title":"all-tags","text":"","link":"/all-tags/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/09/03/hello-world/"},{"title":"아스키코드,유니코드","text":"컴퓨터의 사용 2진수 컴퓨터의 기본 저장 단위는 바이트(byte)이다. 1바이트(byte)는 8비트(bit)이다. 1byte에는 2의 8승에 해당하는 256개의 고유한 값을 저장할 수 있다. 아스키(ASCII)아스키코드는 7비트 즉, 128개의 고유한 값만 사용한다.왜 아스키 코드는 7비트만 활용할까? 그 이유는 1비트를 통신 에러 검출을 위해 사용하기 때문이다. 0부터 32까지는 인쇄와 전송 제어용으로 사용되는 알 수 없는 용어들이 가득하다. 33부터 126까지는 숫자, 알파벳 소문자, 알파벳 대문자, 특수기호 등이 할당되어있는 것을 알 수 있다. 유니코드(Unicode)시간이 지나가면서 영어나 숫자 그리고 기본적인 기호뿐만 아니라 그 나라, 그 언어에서 쓰는 다양한 문자들을 처리하려면 1바이트로 정의된 아스키 코드를 확장할 필요가 있게 되었다. 유니코드는 이런 아스키코드의 한계성을 해소할 수 있는 체계로 만들어진 코드이다.각 나라별 언어를 모두 표현하기 위해 나온 코드 체계가 유니코드(Unicode)이다. 유니코드는 사용중인 운영체제, 프로그램, 언어에 관계없이 문자마다 고유한 코드 값을 제공하는 새로운 개념의 코드이다. 언어와 상관없이 모든 문자를 16비트로 표현하므로 최대 65,536자까지 표현할 수 있다.유니코드 인코딩 방식으로는 UTF-7, UTF-8, UTF-16, UTF-32 인코딩 등이 있다. 한글은 자음과 모음의 조합 가능 개수만 따져도 가뿐히 128개를 넘는다. 중국어 역시 한자의 개수가 만 개가 넘는데, 이를 어떻게 아스키 코드에 담을 수 있을까? 그래서 용량을 크게 확장한 2byte (2의 16승 = 65536)의 유니코드가 등장하게 되었다.","link":"/2019/10/01/concept/00_ascii-code_uini-code/"},{"title":"컴파일, 인터프리터 언어","text":"컴파일 언어 소스코드에서 목적 코드로 옮기는 것을 말한다. 언어 종류 : C, C++, JAVA, C# 등 작성한 코드를 기계어로 변환하는 빌드의 과정을 거친 후 읽을 수 있게 만든다. 실행 파일을 생성한다. 빌드의 과정이 거쳐서 컴파일과 실행 단계가 분리되어 있음으로 빠르다. 오류가 있다면 컴파일할때 오류가 난다. 특징빌드타임에 모든 구문 분석과 기계어 변환이 이루어지기 때문에 빌드가 느리고 생성된 기계어는 정적이다. 하지만 런타임의 경우 특별한 과정이 없어서 빠르다. 인터프리터 언어 소스코드를 바로 실행하는 컴퓨터 프로그램 또는 환경을 말한다. 언어 종류 : javascript, html, 액션스크립트, sql, pyhone, ruby 등 작성한 코드를 빌드의 과정 없이 한줄 한줄 해석하여 명령을 실행한다. 실행파일을 따로 생성하지 않는다. 인터프리터 단계와 실행단계가 분리되어있지 않고 한줄 한줄 해석하기 때문에 빌드된 과정에 비해 다소 시간이 소요된다. 오류가 있다면 실행될때 오류가 난다. 특징한줄한줄 분석하여 실행속도가 느리지만 코드 변경시 즉시 실행이 가능하여 테스트에 용이합니다.","link":"/2019/10/01/concept/01_compiler_interpreter/"},{"title":"javascript VS ECMAScript","text":"ECMA Script란?MS의 Jscript와 javascript가 너무 재각각이라 표준이 필요하게 되었는데, 표준을 위해 자바스크립트를 ECMA(European Computer Manufacturers Assocation)라는 정보통신시스템 비영리 표준 기구에 제출하였고, 표준에 대한 작업을 ECMA-262란 이름으로 채택되었다. ECMA라는 단체에서 기존의 결점을 보완한 표준 자바스크립트 버전을 매년 발표한다. ES는 바로 EcmaScript의 줄임말이다. ECMAScript는 모두가 동일한 환경에서 볼 수 있게 구현된Javascript의 표준화된 언어. ES3(1999), ES5(2009), ES 2015(ES 6) JavascriptECMAScript 표준(ECMA-262)를 바탕으로 구현된언어. Javascript 가 실행되기 위해서는 Javascript Engine(interpreter)가 필요한다. 웹브라우저마다 다른 Javascript Engine을 가지고 있어서 ECMAScript spec차이가 생긴다. ECMA-262에서 정의하는 ECMAScript 핵심 기능을 제공 문서 객체모델 (DOM)을 웹페이지 콘텐츠를 조작하는 메서드와 인터페이스 제공 브라우저 객체 모델(BOM), 브라우저와 상호작용하는 메서드와 인터페이스를 제공.","link":"/2019/10/01/concept/02_javascript_ECMAScript/"},{"title":"variable (변수)","text":"변수 하나의 값을 저장할 수 있는 메모리 공간에 붙인 이름 또는 메모리 공간 자체를 말한다. 하나의 값을 저장할 수 있고, 객체나 배열과 같은 자료 구조를 사용하면 여러개의 값을 하나로 그룹화 하여 하나의 값처럼 사용할 수 있다. 저장된 값을 다시 읽어들여서 재사용 할 수 있도록 메모리 공간을 식별할 수 있는 이름을 붙힌 것이다. 변수에 값을 저장하는 것을 할당(assignment대입, 저장) 이라고하고, 변수에 저장된 값을 읽어 들이는 것을 참조(reference)라고 한다 식별자변수 이름을 식별자(identifer)라고 부른다. 식별자는 어떤 값을 구별하여 식별해낼 수 있는 이름을 말한다. 식별자의 예로는, 변수, 함수, 클래스 등의 이름이 모두 식별자 이다. 즉 값을 식별할 수 있는 이름은 모두 식별자 라고 부른다. 변수 선언var, let, const 키워드를 사용한다.var : function-scope, 이미 만들어진 변수를 재선언해도 오류가 발생하지 않는다.let : block-scope, 변수를 재선언하면 오류가 난다.const : 재선언 및 재할당 할 수 없다. var 키워드는 뒤에 오는 변수 이름으로 새로운 변수를 선언할 것을 지시하는 키워드이다. 1var score; // undefined 변수 선언 후 값을 할당하지 않았지만, 자바스크립트 엔진에 의해 undefined라는 값이 암묵적으로 할당되어 초기화된다. 이것은 자바스크립트의 독특한 특징이다. 자바스크립트 엔진은 변수 선언을 2개의 단계를 거쳐 수행한다. 선언 단계 : 변수 이름을 등록하여 자바스크립트 엔진에 변수의 존재를 알린다. 초기화 단계 : 값을 저장하기 위한 메모리 공간을 확보하고 암묵적으로 undefined를 할당한다 변수를 사용하려면 반드시 선언이 필요하다. 변수 뿐만 아니라 모든 식별자(함수, 클래스 등)이 그렇다. 그렇지 않으면 error가 발생한다. 변수 선언의 실행 시점과 변수 호이스팅12console.log(score); // undefinedvar score; //변수 선언 (변수선언문) 변수 선언은 소스 코드가 순차적으로 한 줄씩 실행되는 시점, 즉 런타임이 아니라 그 이전 단계인 구문분석(syntax analysis) 단계에 먼저 실행된다. (즉 코드를 한줄씩 순차적으로 실행하기 이전에 먼저 코드 전체를 평가한다) 이때 모든 선언문 (변수 선언문, 함수 선언문 등)을 찾아내어 식별자를 등록하고 초기화 한다. 그 후 선언문을 제외한 소스 코드를 한 줄씩 순차적으로 실행한다. 변수선언(선언 단계와 초기화 단계)이 소스코드가 순차적으로 실행되는 런타임 이전인 구문 분석 단계에 먼저 실행 된다. 이처럼 변수 선언문 코드의 선두로 끌어 올려진 것처럼 동작하는 자바스크립트 고유의 특징을 변수 호이스팅이라 한다. 값의 할당변수에 값을 할당할 때는 이전 값 undefined가 저장되어 있던 메모리 공간을 지우고 그 메모리 공간에 할당된 값을 새롭게 저장하는 것이 아니라 새로운 메모리 공간을 확보하고 그 메모리 공간에 값을 할당하는것이다. 값을 재할당 하여도 공간을 지우는것이 아니라 값을 새롭게 저장하는 것이다. 아무도 사용하지 않는 재할당 된값 이전의 값들은 가비지 컬렉터에 의해 메모리에서 자동 해제된다. 가비지 컬렉터(Garbage Collector)가비지 컬렉터는 애플리케이션이 확보한 메모리를 주기적으로 검사하여 더 이상 사용되고 있지 않는 메모리를 해제하는 기능을 말한다. 더 이상 사용되고 있지 않는 메모리란 어떤 식별자도 참조하고 있지 않는 메모리 영역을 의미한다. 자바스크립트는 가비지 컬렉터를 내장하고 있는 매니지드 언어이다. 이를 통해 메모리 누수(memory leak)를 방지한다.","link":"/2019/10/01/javascript/01_variable/"},{"title":"자바스크립트 개발 환경 및 실행 환경","text":"자바스크립트 실행환경모든 브라우저는 자바스크립트를 실행할 수 있는 엔진을 가지고있다. node에서도 역시 작동한다. 브라우저와 node.js는 용도가 다르다. 차이점브라우저 : 클라이언트 사이드 Web API 제공node.js : node.js 고유의 api 웹 브라우저웹 브라우저는 어떻게 작동하는가?작동순서 사용자 도메인 입력 (사용자가 요청을 보냄) (브라우저의 핵심 역할은 html,css,javscript를 요청) http의 규약대로 통신하여 움직인다 DNS서버에서 ip주소로 변환하여 서버에 웹페이지를 요청(request) (DNS 서버는 IP주소 변환 뿐만 아니라 위조된 사이트로 이동되는것을 막아주고 특정사이트에 접속되지 않거나 경고 메세지를 보여주는 페이지로 이동하는 등의 추가 동작을 한다.) 서버의 응답을 받아(responsive) 브라우저에 표출 (브라우저는 서버로부터 html, css, javascript, 이미지 파일) 등 을 READ되어 응답, 다운로드 한다. 브라우저에 의해 HTML,CSS,javascript가 분석하기위해 파싱되어 웹페이지에 표시, 파싱(브라우저 랜더링앤진)의 결과물이 돔트리다. 이때 각 언어에 맞는 컴파일언어, 인터프리터 언어의 과정을 거치며 실행한다. 태그의 위치에 따라 블로킹이 발생하여 DOM의 생성이 지연될 수 있기때문에 script의 위치가 중요하기 떄문에 DOM이 완전히 생성 된 후 script가 실행될 수 있도록 body 최하단에 위치 시킨다. async 및 defer을 사용하면 파싱완료 후 실행할 수 있다. 후에 페인팅 한다. 개발자 도구elements : dom과 css를 편집하여 렌더링된 뷰를 볼 수 있다.console : 에러 및 console.log메소드 결과를 확인 할 수 있다.sources : 로딩된 웹 페이지의 자바스크립트 코딩을 디버깅 할 수있다.Network : 로딩 웹페이지에 관련 네트워크 요청 정보 및 퍼포먼스 확인할 수있다.Application : 웹 스토리지, 세션, 쿠키를 확인하고 관리할 수 있다. 콘솔에플리케이션이 정상적으로 동작하지 않을때 가장 우선적으로 살펴보아야한다. 에러가아니더라도 콘솔 함수를 사용하거나 자바스크립트 코드를 직접 입력하여 사용 할 수 있다. 1console.log(); 디버깅source패널에서 에러가 발생한 코드 왼쪽의 라인 번호를 클릭하여 브레이크 포인트(중단점)을 걸고 다시 버튼을 클릭하면 디버깅 모드에 들어가게 된다. source tab &gt; html클릭 &gt; 빨간색 밑줄의 x자에 에러메세지 나옴번호 왼쪽에 클릭 break를 걸고, 새로고침해서 실행하면 나온다. 참고사이트Tools for Web Developers:콘솔사용 : https://developers.google.com/web/tools/chrome-devtools/console/?hl=ko Tools for web Developers: Chrome Devtools 자바스크립트 디버깅 시작하기 : https://developers.google.com/web/tools/chrome-devtools/javascript/?hl=ko Node.jsReact와같은 라이브러리를 도입하거나 Babel, Webpack, ESlint 등 여러가지 를 사용할때 Node.js와 npm이 필요하다 Node.js와 npm브라우저 이외의 환경에서 동작 시킬 수 있는 자바스크립트 실행환경이 node.js이다. 주로 서버사이드 애플리케이션 개발에 사용되고 빌트인api를 제공한다. SPA(Single Page Application)에 적합하다. npm(node pakage manager)은 자바스크립트 패키지 매니저이다. node.js에서 사용할 수 있는 모듈들을 패키지화 하여 저장소 역할과 패키지 설치 및 관리를 위해 cli를 제공한다.","link":"/2019/10/01/javascript/00_development-environment/"},{"title":"internet network server","text":"브라우져와 서버간 request, response가 반복되는 것인 컴퓨터간의 대화라고 할 수 있다. request한 컴퓨터는 client라고하며, response한 컴퓨터는 server라고 한다. domain, ip address구글에 접근할 수 있는 방법 ip address, domaindomain name -&gt; google.comip adress -&gt; 216.58.197.174 (확인 방법 : ping google.com)google.com을 입력하여 전송을 누르면 ip address로 변환되서 ip address가 접속이되고 응답이 된다. 출력 경로google.com입력 &gt;DNS Server접속 &gt;DNS database에서 google.com의 ip주소를 client컴퓨터에 전송. &gt;client의 컴퓨터가216.58.197.174으로 ip로 접속해서 응답을 받는다. DNS Server란?google.com 같은 네임 주소를 입력 하면, DNS 서버에서 google.com의 숫자로 된 고유 ip 주소로 변경해서 접속 하게 됩니다.하지만 DNS 서버는 이 도메인을 ip 주소로 변환만 하는게 아니라, DNS 서버를 보유한 곳의 보안 정책이 적용 되어 있어서,google.com을 입력 하면 위조된 사이트로 이동되는 것도 막아주기도 하고,특정 사이트는 접속이 되지 않거나, 접속 하더라도 경고 페이지를 보여 주는 등의 추가 동작을 하기도 합니다. iphttp://ipinfo.io/ip : 220.117.71.146 (접속한 컴퓨터가 어떤 아이피로 접속했는지 결과적으로 확인함)ip addr : 10.0.2.15 (컴퓨터에 부여된 실제 ip, 컴퓨터가 실질적으로 가지고 있는 ip를 알아냄) public address : 회사에서 아이피 부여 ex) 220.117.71.146 회사의 대표번호와 같은private address: 외부에 공개되지않은, 내선번호와 같은 -&gt; 회사에서 ip주소를 부여하고 라우터가 중간에 있다면, 로컬 컴퓨터의 서버는 외부에서 접근할 수 없지만, 로컬컴퓨터 서로는 같은 wifi안에서 접근할 수 있다.","link":"/2019/09/03/internet/internet/"},{"title":"data-type","text":"데이터타입자바스크립트의 모든 값은 데이터 타입을 갖는다. 데이터 타입은 값으 종류를 이야기 한다. 데이터 타입이 필요한 이유는 아래와 같다. 값을 저장할 때 확보해야 하는 메모리 공간의 크기를 결정하기 위해 값을 참조할 때 한번에 읽어 들여야 할 메모리 공간의 크기를 결정하기 위해 메모리에서 읽어 들인 2진수를 어떻게 해석할 지를 결정하기 위해 값의 생성값은 다양한 방법으로 생성할 수 있는데 가장 기본적인 방법은 리터럴 표기법이다. 리터럴 리터럴은 소스 코드 안에서 직접 만들어 낸 고정된 값 자체를 말한다. 리터럴은 사람이 이해할 수 있는 표기법으로 값의 생성을 자바스크립트 엔진에게 명령하는 것이다. ex) 숫자, 문자열, 불리언, null, undefined, 객체, 배열, 함수, 정규 표현식 등 12","link":"/2019/10/02/javascript/02_data-type/"},{"title":"기본 개념과 동작원리 이해의 중요성","text":"1const a = 123; //키워드 변수 연산자 값 프로그래밍이란프로그래밍이란 컴퓨터에게 실행을 요구하는 일종의 커뮤니케이션이다. 요구되는 것은 문제 해결 능력이다. 2진수는 0,1만표현 10진수는 0~9 까지 표현 8bit =&gt; 1bite =&gt; 256개 왜 8bit를 1bite라고할까?아스키코드 : 0과 1의 조합으로 사람이 이해할수 있는 숫자 문자를 만들어 내는 코드의 조합 경우 256 (영대소,숫자,특수문자)유니코드 : 문자는 2bite다","link":"/2019/10/01/javascript-basic/00_basic_content/"},{"title":"연산자","text":"표현식과 연산자표현식은 리터럴, 식별자, 연산자, 함수/메소드 호출 표현식 등으로 나누어볼 수 있지만 결과적으로 하나의 값을 만든다는 점에서 모두 동일하다. 123var x = 10;// 표현식 + 30은 식별자 표현식과 숫자 리터럴과 연산자의 조합으로 구성되어 있다.x + 30; // -&gt; 40 문과 표현식문(statement)은 하나 이상의 표현식과 키워드의 조합으로 구성된 자바스크립트 엔진에게 내리는 명령이다. 문의 집합으로 이루어진 것이 바로 프로그램이며 문을 작성하고 순서에 맞게 나열하는것이 프로그램이다. 자바스크립트의 모든 코드는 문 또는 표현식이다. 표현식은 그 자체로 문이 될 수 있지만, 문이 표현식이 될 수 없다. 표현식의 역할은 값을 생성하는 것이다. 문의 역할은 표현식으로 생성한 값을 사용해 자바스크립트 엔진에게 명령을 내리는 것이다 표현식인 문과 표현식이 아닌 문변수 선언문은 값으로 평가될 수 없다. 따라서 표현식이 아닌 문이다. 하지만 할당문은 그 자체가 표현식인 문이다. 표현식인 문과 표현식이 아닌 문을 구별하기 위한 가장 간단하고 명료한 방법은 변수에 할당해 보는 것이다 1234567var x; // 변수 선언문은 표현식이 아닌 문이다.x = 100; // 할당문 자체가 표현식이지만 완전한 문이기도 하다. 즉 할당문은 표현식인 문이다.var foo = var x; // 표현식이 아닌 문은 값처럼 사용할 수 없다.var foo = x = 100; // 표현식인 문은 값처럼 사용할 수 없다.console.log(foo); //100 연산자란?하나 이상의 표현식을 대상으로 산술, 할당, 비교, 논리, 타입 연산 등을 수행해 하나의 값을 만든다. 이때 연산의 대상을 피연산자라고 한다. 연산자는 값으로 평가된 피연산자를 연산해 새로운 값을 만든다. 이항 산술 연산자2개의 피연산자를 산술연산하여 값을 만든다.피연산자의 갑슬 변경하는 부수 효과는 없다. 언제나 새로운 값을 만든다. 1+, -, *, /, % 단항 산술 연산자1개의 피연산자를 산술 연산하여 숫자 타입의 값을 만든다. 이항 산술 연산자와는 달리 증가/감소(++/–) 연산자는 피연산자의 값을 변경하는 부수 효과가 있다.. 다시 말해 증가/감소 연산을 하면 피연산자의 값이 바뀐다. 1++, --, +, - 문자열 연결 연산자+ 연산자는 피연산자 중 하나 이상이 문자열인 경우 문자열 연결 연산자로 동작한다.. 그 외의 경우 덧셈 연산자로 동작한다. 12'1' + 2; // -&gt; '12'1 + '2'; // -&gt; '12' 할당 연산자할당 연산자는 우항에 있는 피연산자의 평가 결과를 좌항에 있는 변수에 할당한다. 할당 연산자는 좌항의 변수에 값을 할당하므로 변수의 값이 변하는 부수 효과가 있다. 12345// =, +=, -=, *=, /=, %=var x;x += 5; // x = x + 5;x -= 5; // x = x - 5; 비교연산자비교연산자는 좌항과 우항의 피연산자를 비교한 다음 그 결과를 불리언 값을 반환한다. 비교 연산자는 if 문이나 for문과 같은 제어문의 조건식에서 주로 사용한다. 동등 / 일치 비교 연산자동등 비교 연산자와 일치 비교 연산자는 좌항과 우항의 피연산자가 같은 값을 갖는지 비교하여 불리언 값을 반환한다. 하지만 비교하는 엄격성의 정도가 다르다. 동등 비교 연산자는 느슨한 비교를 하지만 일치 비교 연산자는 엄격한 비교를 한다. 1==, ===, !=, !== 1234NaN === NaN; // -&gt; false;isNaN(NaN); //-&gt; true;isNaN(10); // -&gt; false;isNaN(1 + undefined); // -&gt; true; Nan은 자신과 일치하지 않는 유일한 값이다. 따라서 숫자가 NaN인지 조사하려면 빌트인 함수 isNaN을 사용한다. 대소 관계 비교 연산자대소 관계 비교 연산자는 피연산자의 크기를 비교하여 불리언 값을 반환한다. 1&gt;, &lt;, &gt;=, &lt;= 삼항 조건 연산자1조건식 ? 조건식이 true일때 반환할 값 : 조건식이 false일때 반환할 값 123var x = 2;var result = x % 2 ? '홀수' : '짝수'; // 2 % 2는 0 이고 0은 false로 암묵적 타입이 변환된다.console.log(result); // 짝수 if else 문은 표현식이 아닌 문이라서 값처럼 사용할 수 없다.삼항조건 연산자는 표현식은 값으로 평가할 수 있는 표현식 문이다. 논리 연산자논리 연산자는 우항과 좌항의 피연산자를 논리 연산한다. 1||, &amp;&amp;, ! typeof 연산자123456789101112typeof '' // stringtypeof 1 // numbertypeof NaN // numbertypeof true // booleantypeof undefined // undefinedtypeof Symbol() // symboltypeof null // objecttypeof [] // objecttypeof {} // objecttypeof new Date() // objecttypeof /test/gi // objecttypeof function (){} // function typeof 연산자로 null 값을 연산해 보면 ‘null’이 아닌 ‘object’를 반환하는 것에 주의해야한다. 이것은 자바스크립트의 첫번째 버그이다. null타입을 확인할 때 typeof 연산자를 사용하지 말고 일치 연산자(===)를 사용하도록 하자. 123var foo = null;typeof foo === null; // -&gt; false;foo === null; // -&gt; true; 지수 연산자ES7에서 새롭게 도입된 지수 연산자는 좌항의 피연산자를 밑으로, 우항의 피연산자를 지수로 거듭 제곱하여 숫자 타입의 값을 반환한다.","link":"/2019/10/02/javascript/03_operator/"},{"title":"자바스크립트란?","text":"자바스크립트의 탄생넷스케이프 커뮤니케이션즈에서 브렌던 아이크(Brendan Eich)가 개발한 스크립트이다.Netscape Navigator 2에 탑재 되었고 “Mocha”로 명명되엇다. “Live script”에서 “javascript”로 명명되었다. ajax웹","link":"/2019/10/01/javascript-basic/01_what_javascript/"},{"title":"오리엔테이션","text":"– 프론트엔드 개발자가 하는일사용자 입력 &gt; 브라우저 &gt; 입력받은데이터 &gt; 서버로 보냄 &gt; 웹프라우저 &gt; 사용자이 과정을 웹 에플리케이션이라고 한다.브라우져가 자바스크립트를 동작시킨다. 웹 브라우져가 어떻게 움직이는지, html, css,javascript를 실행시키는지 알아야한다.서버에서도 javascript가 가능한데 그 플렛폼이 node.js이다. 어플리케이션을 사용하는 사람이 애플리케이션과 소통하기 위한 창구(user interface)를 사용하기 좋게 구현한다UI는 상태 정보를 서버로 전송하기도 하고 서버의 데이터를 가져와서 UI에 표시하기도 한다. 웹 에플리케이션 : 동적이다. 데이터가 백엔드와 왔다갔다하는가.웹 페이지 : 정적이다. State (상태관리)checkbox : true, false (두개이상 가능)radio: true,false (하나만 가능)input: 협업 툴을 잘 사용하는것 프론트엔드 개발에 필요한 기술 HTML CSS 크로스 브라우징 Javascript (es5, es6, ES Next, DOM/Event, Ajax, 동작원리(브라우저, 자바스크립트 엔진), nodejs) HTTP (통신 규약 -&gt; 데이터를 주고받을때 약속) Tool : Git, Webpack, Babel, ESlink, npm Library / TDD(Test Driver Development/ kama / jasmine, mocha, chai) 알고리즘, 자료구조 초심자가 경험하는 3가지 어려움 책이나 수업의 내용이 무슨 말인지 하나도 모르겠다. 주변 개발자의 말을 알아들을 수 없다. 어떻게 만들어야 할 지 감조차 오지 않는다. 어떻게 만들어야 할지는 알겠는데 막상 코딩하려니까 한 줄도 못 짜겠다. 프로그래밍 학습 방향기본 개념과 동작 원리 -&gt; 코딩 스킬 -&gt; 프로젝트","link":"/2019/10/01/javascript-basic/intro/"},{"title":"웹 동작 원리","text":"웹 브라우저는 어떻게 작동하는가?작동 순서 사용자 도메인 입력.비연결성 프로토콜의 특징을 가지고 있는 http는 규약에 따라 사용자의 도메인입력으로 요청(request) 준비를 한다. 먼저 접속하려고 하는 도메인에 연결된 DNS(네임서버)로 접속하여 서버 IP를 요청한다. 요청 받은 네임서버는 서버 IP주소를 찾은 뒤, 사용자 컴퓨터에게 IP를 알려준다.DNS 서버는 IP주소 변환 뿐만 아니라 위조된 사이트로 이동되는것을 막아주고 특정사이트에 접속되지 않거나 경고 메세지를 보여주는 페이지로 이동하는 등의 추가 동작을 한다. 컴퓨터는 전달 받은 서버 IP로 접속하여 도메인을 입력한 페이지의 정보를 요청(request)한다. 서버는 요청을 받아서 페이지(html,css,javascript)를 브라우저에 http의 규약에 따라 응답(reponse) 하여 준다. 브라우저는 응답받은 정보를 다운로드하여 파싱한다. html,css가 Rendering Engine에 의해 파싱되고, javascript가 javascript Engine에 의해 파싱되는데, 인터프리터 성격을 가진 이 언어들이 순서에 따라 파싱하여 랜더링된 후에 browser에 프린트되어진다.이때 태그의 위치에 따라 블로킹이 발생하여 DOM의 생성이 지연될 수 있기 때문에 script의 위치가 중요하다. 그래서 DOM이 완전히 생성 된 후 script가 실행될 수 있도록 body 최하단에 위치 시킨다. async 및 defer을 사용하면 html,css 파싱완료 후 실행할 수 있다. HTTP란?HTTP(Hypertext Transfer Protocol)란 브라우저 같은 응용 프로그램을 통해 사용자와 서버사이 데이터를 전송하는 프로토콜(통신 규약)로 WWW(World Wide Web)의 분산되어 있는 서버와 사용자간에 하이퍼 텍스트를 이용한 정보 교환이 가능하게 만든다. 특징 TCP(Transmission Control Protocol) / IP(Internet Protocol)을 이용하는 응용 프로토콜(application protocol)이다.컴퓨터와 컴퓨터간에 데이터를 전송 할 수 있도록 하는 장치로 인터넷을 통해 원하는 정보를 주고받는 기능을 이용하는 응용 프로토콜로 포트 번호는 기본적으로 80번을 사용한다. HTTP는 연결 상태를 유지하지 않는 비연결성 프로토콜이다.브라우저를 통해 사용자의 요청(request)에 따라 서버와 접속하여 요청에 대한 응답(response)의 데이터를 전송 후 연결을 종료한다.이러한 심플한 상태이기 때문에 전산 자원이 적게 든다는 장점이 있다.하지만 연결이 지속적이지 않기 때문에 사용자와 종료 후 추가적인 요청을 처리할 수없다는 단점이 있다.이러한 단점을 해소하기 위한 방법으로 Cookie, Session, URL Rewriting, Hidden Form Field 등이 사용된다. HTTP는 연결 상태를 유지하지 않는 프로토콜이기 때문에 요청(Request) / 응답(Response)방식으로 동작한다.서버가 먼저 응답하지 않으며 사용자의 요청 한개에 대해 한개의 응답을 하는 방식이다. 네임서버(DNS)란?사이트 접속을 하기 위해선, 해당 사이트에 대한 정보를 갖고 있는 서버의 주소. 즉 ip를 알아야 한다. 전세계적으로 무수히 많은 도메인에 연결된 ip를 알아내기란 쉽지않은데, 그래서 등작한 것이 바로 DNS(Domain Name Server)서버 이다. DNS 또는 Domain Name System은 사람이 읽을 수 있는 도메인 이름을 머신이 읽을 수 있는 ip주소 (ex: 192.0.4.2)로 변환한다.","link":"/2019/10/02/concept/03_web_works/"}],"tags":[],"categories":[{"name":"study","slug":"study","link":"/categories/study/"},{"name":"개념이해","slug":"study/개념이해","link":"/categories/study/개념이해/"},{"name":"javascript","slug":"study/javascript","link":"/categories/study/javascript/"},{"name":"internet","slug":"study/internet","link":"/categories/study/internet/"},{"name":"javascript-basic","slug":"study/javascript-basic","link":"/categories/study/javascript-basic/"}]}